<?php


namespace Tests\Feature\API\Advert;


use App\Models\User;
use Faker\Provider\Text;
use Tests\TestCase;

class CreateAdvertTest extends TestCase
{
    protected User $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::find(1);
    }

    public function testGuestCannotCreateAdvert()
    {
        $this->postJson(route('api.adverts.create'))
            ->assertStatus(401);
    }

    public function testUserCannotCreateInvalidAdvert()
    {
        $payload = [
            'title' => 'Some sample post',
        ];

        $expectedErrors = [
            'errors' => [
                'description' => ['The description field is required.'],
                'images_links' => ['The images links field is required.'],
                'price' => ['The price field is required.'],
            ]
        ];

        $this->actingAs($this->user)
            ->postJson(route('api.adverts.create'), $payload)
            ->assertStatus(422)
            ->assertJson($expectedErrors);
    }

    public function testUserCannotLoadMoreThanThreeImages()
    {
        $payload = [
            'title' => 'Some sample post',
            'images_links'   => [
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
            ]
        ];

        $expectedErrors = [
            'errors' => [
                'images_links' => ['The images links must not have more than 3 items.'],
            ]
        ];

        $this->actingAs($this->user)
            ->postJson(route('api.adverts.create'), $payload)
            ->assertStatus(422)
            ->assertJson($expectedErrors);
    }

    public function testUserCannotLoadMoreThan200TitleString()
    {
        $payload = [
            'title' => 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In at erat vitae velit pharetra dignissim vel ac nisl. Suspendisse porta, sem eu mollis suscipit, felis lacus facilisis justo, a dapibus quam erat sed tortor. Nam odio nulla, venenatis quis lobortis nec, pretium id lectus. Integer fermentum volutpat velit eu iaculis. Quisque vulputate lacus orci, non gravida eros tempor id. Donec in tortor a tortor hendrerit ultricies in ut orci. Donec blandit sed odio eu suscipit. Sed congue dolor eu arcu porttitor facilisis. Donec ac condimentum purus. Donec dapibus mi quis sodales efficitur.',
            'images_links'   => [
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
            ]
        ];

        $expectedErrors = [
            'errors' => [
                'images_links' => ['The images links must not have more than 3 items.'],
                'title' => ['The title must not be greater than 200 characters.'],
            ]
        ];

        $this->actingAs($this->user)
            ->postJson(route('api.adverts.create'), $payload)
            ->assertStatus(422)
            ->assertJson($expectedErrors);
    }

    public function testUserCannotLoadMoreThan1000DescriptionString()
    {
        $payload = [
            'title' => 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In at erat vitae velit pharetra dignissim vel ac nisl. Suspendisse porta, sem eu mollis suscipit, felis lacus facilisis justo, a dapibus quam erat sed tortor. Nam odio nulla, venenatis quis lobortis nec, pretium id lectus. Integer fermentum volutpat velit eu iaculis. Quisque vulputate lacus orci, non gravida eros tempor id. Donec in tortor a tortor hendrerit ultricies in ut orci. Donec blandit sed odio eu suscipit. Sed congue dolor eu arcu porttitor facilisis. Donec ac condimentum purus. Donec dapibus mi quis sodales efficitur.',
            'images_links'   => [
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
            ],
            'description'   => 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In at erat vitae velit pharetra dignissim vel ac nisl. Suspendisse porta, sem eu mollis suscipit, felis lacus facilisis justo, a dapibus quam erat sed tortor. Nam odio nulla, venenatis quis lobortis nec, pretium id lectus. Integer fermentum volutpat velit eu iaculis. Quisque vulputate lacus orci, non gravida eros tempor id. Donec in tortor a tortor hendrerit ultricies in ut orci. Donec blandit sed odio eu suscipit. Sed congue dolor eu arcu porttitor facilisis. Donec ac condimentum purus. Donec dapibus mi quis sodales efficitur.
Nulla at nulla condimentum, tristique felis ut, mollis massa. Duis vitae blandit augue. Praesent auctor imperdiet urna, eget eleifend massa fringilla vel. Nulla vel enim posuere, maximus ante et, luctus elit. Sed erat quam, tempus non sodales at, commodo non massa. Maecenas rhoncus lorem est, et tempus massa pellentesque et. Ut risus est, varius id dolor nec, eleifend bibendum erat. Ut rutrum sapien elementum nisi tristique interdum. Vestibulum condimentum at urna et mollis. Nulla condimentum aliquam efficitur. Praesent ornare vehicula scelerisque. Nulla porta et sem vel iaculis.
Nunc interdum fermentum mi, non fringilla ante gravida sit amet. Cras rutrum, leo non porta aliquam, augue enim luctus nunc, ultrices faucibus eros erat sed ante. Donec ut felis ac neque volutpat mollis lacinia non lectus. Vivamus eleifend hendrerit ex, quis eleifend ex dapibus ut. Suspendisse tempus lobortis leo eget fringilla. Aenean id dolor eu nibh efficitur fringilla. Integer blandit, velit eget cursus blandit, mi velit iaculis elit, ut pellentesque velit magna vel erat.
Sed id aliquam ex. Phasellus non efficitur dolor. Nulla sagittis ut orci non tristique. Proin commodo porttitor enim, a pharetra nunc auctor eget. Pellentesque eleifend sem a nisi mattis, sit amet tristique tellus scelerisque. Sed faucibus orci eu mi fermentum, vitae sagittis mi fringilla. Proin placerat a purus a porttitor. Ut sagittis ullamcorper nunc ut bibendum. Vivamus at lorem iaculis, venenatis ante vitae, elementum purus. Proin a tempus urna. In fermentum, quam et pretium faucibus, nulla est sollicitudin lorem, eu hendrerit est erat eget ligula.'
        ];

        $expectedErrors = [
            'errors' => [
                'images_links' => ['The images links must not have more than 3 items.'],
                'title' => ['The title must not be greater than 200 characters.'],
                'description' => ['The description must not be greater than 1000 characters.'],
            ]
        ];

        $this->actingAs($this->user)
            ->postJson(route('api.adverts.create'), $payload)
            ->assertStatus(422)
            ->assertJson($expectedErrors);
    }

    public function testUserCanCreateValidAdver()
    {
        $payload = [
            'title' => 'Some sample title',
            'images_links'   => [
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
                'https://images.unsplash.com/photo-1619302947114-e1a8bfc365ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80',
            ],
            'description'   => 'Some sample description',
            'price' => 2500
        ];

        $this->actingAs($this->user)
            ->postJson(route('api.adverts.create'), $payload)
            ->assertStatus(200)
            ->assertJsonStructure([
                'id'
            ]);
    }


}
